I"Y<p>In the prior post I showed results for a new equities strategy which uses a combination of signals to
create and risk manage a high-momentum portfolio.  Further investigation revealed that I had neglected
on a couple of fronts:</p>

<ul>
  <li>failed to account for dividends (which are substantial)</li>
  <li>some data issues</li>
  <li>improper sharpe calculation</li>
</ul>

<p>The good news is that solving these issues substantially improved the profitability of the strategy (which was
already high return for a low-freq strategy).</p>

<p><img src="/assets/2020-12-24/strat2.png" width="800" height="600" /></p>

<p>The strategy invests in a portfolio of stocks from period to period.  Some of these stocks will underperform
or experience unrealized drawdowns during the holding period.  I spent some time trying to determine if there was a way to detect a 
losing asset and cut it earlier to reduce impact on the portfolio return.  Many profitable
stocks see a small negative unrealized drawdown during the holding period:</p>

<table>
  <thead>
    <tr>
      <th>unrealized drawdown</th>
      <th>%</th>
      <th>% with positive outcomes</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>all</td>
      <td>100%</td>
      <td>65%</td>
    </tr>
    <tr>
      <td>touched &lt; 0</td>
      <td>72%</td>
      <td>52%</td>
    </tr>
    <tr>
      <td>touched &lt; -2%</td>
      <td>55%</td>
      <td>41%</td>
    </tr>
    <tr>
      <td>touched &lt; -5%</td>
      <td>33%</td>
      <td>22%</td>
    </tr>
    <tr>
      <td>touched &lt; -10%</td>
      <td>14%</td>
      <td>4%</td>
    </tr>
  </tbody>
</table>

<p>Note that overall, in spite of 72% of assets touching a negative unrealized drawdown during the holding period, the
combined return of the portfolio over each period was <strong>positive 81.6% of the time</strong>.  Looking at the above table one
might decide to <strong>cut assets that touch the -5% level</strong>, however this <strong>produces lower P&amp;L</strong> for the following reasons:</p>

<ul>
  <li>mean reversion of price during holding period (to more positive outcome)</li>
  <li>loss of right tail on the 22%</li>
</ul>

<p>A <strong>money-management approach that is effective</strong>, is to condition on:</p>

<ul>
  <li>negative return (-5% for example)</li>
  <li>buy/sell imbalance as a measure of negative momentum</li>
  <li>target mean-reversion of at least 50% of the unrealized loss</li>
</ul>

<p>However, this <strong>only improved the strategy by 48%</strong> over the 9.75 yr period, and as I was concerned with avoiding data-mining bias, 
so did not include in this round.  One reason <strong>why leaving drawdowns unadjusted</strong> is favorable is that this strategy has
very strong right tails:</p>

<p><img src="/assets/2020-12-24/asset-dist.png" width="600" height="400" /></p>

<p>The above is the realized return distribution for individual assets during their holding periods.</p>

<h2 id="other-notes">Other notes</h2>
<p>The strategy was able to take advantage of the 2020 market drawdown, an unusual circumstance.  Without the drawdown, the
prior period CAGR would be ~30% instead of 35%. I would expect a trajectory similar to 2019 going forward now that the
market has snapped back.</p>

<h2 id="next-steps">Next Steps</h2>
<p>At this point have solved some important issues with the strategy and backtest.  I am starting to trade this manually,
however, I need to get this up and running systematically.  Status of work to be done:</p>

<ol>
  <li><strong>Strategy</strong> (complete for backtesting)
    <ul>
      <li>May need some adjustments for live execution</li>
      <li>Strategy and strategy framework written in Kotlin, research done in Python (and in the past R).</li>
    </ul>
  </li>
  <li><strong>Data Feed</strong> (only historical currently, need live)
    <ul>
      <li>I am curently using Polygon.io for historical data, though have had to mix in data from other sources due
to a few stocks (out of 1700) missing back history or with data issues</li>
      <li>Splits &amp; Dividend information have been a combination of <a href="https://polygon.io/">Polygon.io</a>, Yahoo, and other
sources.  I run a reconciliation to arrive at correct information.  In some cases I have to manually edit my meta 
data.  Hopefully find a reliable single source for this.  Polygon is working on improving their equities meta
data, but is a work in progress.</li>
    </ul>
  </li>
  <li><strong>Execution</strong> (partially implemented)
    <ul>
      <li>I am not running AUM on this, rather just my own money.  The most economical options are the low-cost brokers that 
service the retail community.  <a href="https://alpaca.markets/algotrading">Alpaca</a> has the best API of the lot.  Other 
alternatives would be TD, e*trade, or IB.</li>
      <li>Alternatives: While TD is a large broker, their API is not streaming and their support around the API reputed to be
poor.  IB has a well known API, but is very difficult to work with and has significant limitations (from experience).</li>
    </ul>
  </li>
  <li><strong>Monitoring / UI</strong> (not started)
    <ul>
      <li>I am quite familiar with R/shiny as a way to quickly put up a UI for monitoring &amp; controls.  However I prefer 
Python over R.  Dash is far less mature, but may attempt to put something together with it.</li>
    </ul>
  </li>
</ol>

<p>While trading retail may make sense for a period, for tax reasons it may make sense to trade this out of a different
structure.  I need to understand the various ways I can set this up.  I want to avoid paying short-term capital gains
and be able to reinvest most of the pre-tax principal YoY.</p>
:ET